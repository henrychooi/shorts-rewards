# Generated by Django 5.2.5 on 2025-08-28 11:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Short',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=150)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('video', models.FileField(upload_to='videos/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('duration', models.FloatField(blank=True, help_text='Duration in seconds', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shorts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('short', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='api.short')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='api.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('short', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.short')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('watch_duration', models.FloatField(default=0.0, help_text='Duration watched in seconds')),
                ('short', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='api.short')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('view_reward', 'View Reward'), ('like_reward', 'Like Reward'), ('comment_reward', 'Comment Reward'), ('withdrawal', 'Withdrawal'), ('bonus', 'Bonus')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=10)),
                ('description', models.CharField(max_length=255)),
                ('transaction_hash', models.CharField(blank=True, editable=False, max_length=64, null=True, unique=True)),
                ('previous_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('merkle_root', models.CharField(blank=True, max_length=64, null=True)),
                ('digital_signature', models.TextField(blank=True, null=True)),
                ('nonce', models.BigIntegerField(default=0)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('confirmation_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_short', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.short')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='api.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('transaction_created', 'Transaction Created'), ('wallet_created', 'Wallet Created'), ('withdrawal_request', 'Withdrawal Request'), ('admin_action', 'Admin Action'), ('security_event', 'Security Event')], max_length=30)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(default=dict)),
                ('log_hash', models.CharField(editable=False, max_length=64, unique=True)),
                ('previous_log_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('is_immutable', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='api_auditlo_user_id_47a824_idx'), models.Index(fields=['action_type'], name='api_auditlo_action__e48bab_idx'), models.Index(fields=['log_hash'], name='api_auditlo_log_has_c6cd74_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='short',
            index=models.Index(fields=['-created_at'], name='api_short_created_cc47f0_idx'),
        ),
        migrations.AddIndex(
            model_name='short',
            index=models.Index(fields=['author'], name='api_short_author__70a090_idx'),
        ),
        migrations.AddIndex(
            model_name='short',
            index=models.Index(fields=['view_count'], name='api_short_view_co_6875e0_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user', 'short'], name='api_like_user_id_4c56d7_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['short'], name='api_like_short_i_a1add3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'short')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['short', '-created_at'], name='api_comment_short_i_b98e2e_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user'], name='api_comment_user_id_8de5cd_idx'),
        ),
        migrations.AddIndex(
            model_name='view',
            index=models.Index(fields=['short', 'ip_address'], name='api_view_short_i_bc7dd0_idx'),
        ),
        migrations.AddIndex(
            model_name='view',
            index=models.Index(fields=['created_at'], name='api_view_created_dbb882_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['wallet', '-created_at'], name='api_transac_wallet__00620a_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type'], name='api_transac_transac_811106_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_hash'], name='api_transac_transac_50adc1_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['is_confirmed'], name='api_transac_is_conf_550074_idx'),
        ),
    ]
